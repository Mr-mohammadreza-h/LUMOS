$date
	Tue Jul 02 21:44:12 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Fixed_Point_Unit_Testbench $end
$var wire 32 ! fpu_result [31:0] $end
$var wire 1 " fpu_ready $end
$var parameter 32 # CLK_PERIOD $end
$var reg 1 $ clk $end
$var reg 32 % operand_1 [31:0] $end
$var reg 32 & operand_2 [31:0] $end
$var reg 2 ' operation [1:0] $end
$var reg 1 ( reset $end
$scope module uut $end
$var wire 1 $ clk $end
$var wire 32 ) operand_1 [31:0] $end
$var wire 32 * operand_2 [31:0] $end
$var wire 2 + operation [1:0] $end
$var wire 1 ( reset $end
$var wire 32 , mult_intermediate [31:0] $end
$var parameter 32 - FBITS $end
$var parameter 32 . WIDTH $end
$var reg 6 / bit_position [5:0] $end
$var reg 16 0 mult_op1 [15:0] $end
$var reg 16 1 mult_op2 [15:0] $end
$var reg 1 2 mult_ready $end
$var reg 64 3 mult_result [63:0] $end
$var reg 3 4 mult_state [2:0] $end
$var reg 32 5 partial_product_1 [31:0] $end
$var reg 32 6 partial_product_2 [31:0] $end
$var reg 32 7 partial_product_3 [31:0] $end
$var reg 32 8 partial_product_4 [31:0] $end
$var reg 64 9 radicand [63:0] $end
$var reg 1 " ready $end
$var reg 64 : remainder [63:0] $end
$var reg 32 ; result [31:0] $end
$var reg 32 < root [31:0] $end
$var reg 32 = root_candidate [31:0] $end
$var reg 1 > root_ready $end
$scope module multiplier $end
$var wire 16 ? operand_1 [15:0] $end
$var wire 16 @ operand_2 [15:0] $end
$var reg 32 A product [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 .
b1010 -
b100 #
$end
#0
$dumpvars
b0 A
b0 @
b0 ?
0>
b0 =
b0 <
bz ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
02
b0 1
b0 0
b0 /
b0 ,
bx +
bx *
bx )
1(
bx '
bx &
bx %
1$
0"
bz !
$end
#2
0$
#4
1$
#6
0$
#8
1$
#10
0$
#12
0(
1$
#14
0$
#16
1$
#18
0$
#20
1"
b1111011000000 !
b1111011000000 ;
b0 '
b0 +
b1000001000000 &
b1000001000000 *
b111010000000 %
b111010000000 )
1$
#22
0$
#24
0"
bz !
bz ;
bz '
bz +
bz &
bz *
bz %
bz )
1$
#26
0$
#28
1"
b100010000000 !
b100010000000 ;
b1 '
b1 +
b11000000000 &
b11000000000 *
b111010000000 %
b111010000000 )
1$
#30
0$
#32
0"
bz !
bz ;
bz '
bz +
bz &
bz *
bz %
bz )
1$
#34
0$
#36
b10101110000000000000000 ,
b10101110000000000000000 A
b0 !
b0 ;
b1 4
b11000000000 1
b11000000000 @
b111010000000 0
b111010000000 ?
b10 '
b10 +
b11000000000 &
b11000000000 *
b111010000000 %
b111010000000 )
1$
#38
0$
#40
b0 ,
b0 A
b10 4
b0 0
b0 ?
b10101110000000000000000 5
1$
#42
0$
#44
b11 4
b0 1
b0 @
b111010000000 0
b111010000000 ?
1$
#46
0$
#48
b100 4
b0 0
b0 ?
1$
#50
0$
#52
b101 4
1$
#54
0$
#56
1"
b1010111000000 !
b1010111000000 ;
b0 4
12
b10101110000000000000000 3
1$
#58
0$
#60
0"
bz !
bz ;
bz '
bz +
bz &
bz *
bz %
bz )
1$
#62
0$
#64
1"
b0 !
b0 ;
1>
b100000 /
b1110011000000000000000000000000000000 9
b11 '
b11 +
b11100110000000000 %
b11100110000000000 )
1$
#66
0$
